// src/composables/useCategories.ts
import { ref } from 'vue';
import api from '@/lib/api'; // S·ª≠ d·ª•ng instance ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh v·ªõi interceptor

interface Category {
  id: number;
  name: string;
  slug: string;
  point?: number; // Th√™m tr∆∞·ªùng point cho danh m·ª•c trending
  posts?: Array<{ id: number; title: string; slug: string }>; // Th√™m posts cho allCategories
}

export function useCategories() {
  // State cho t·∫•t c·∫£ danh m·ª•c
  const allCategories = ref<Category[]>([]);
  const allCategoriesLoading = ref(false);
  const allCategoriesError = ref<string | null>(null);

  // State cho danh m·ª•c th·ªãnh h√†nh
  const trendingCategories = ref<Category[]>([]);
  const trendingCategoriesLoading = ref(false);
  const trendingCategoriesError = ref<string | null>(null);

  /**
   * T·∫£i t·∫•t c·∫£ danh m·ª•c.
   */
  const fetchAllCategories = async () => {
    allCategoriesLoading.value = true;
    allCategoriesError.value = null;
    try {
      const response = await api.get('/categories', {
        params: {
          populate: { // ƒê·∫£m b·∫£o populate posts ƒë·ªÉ l·∫•y s·ªë l∆∞·ª£ng b√†i vi·∫øt
            posts: {
              fields: ['id'] // Ch·ªâ c·∫ßn ID ƒë·ªÉ ƒë·∫øm s·ªë l∆∞·ª£ng
            }
          }
        }
      });
      // √Ånh x·∫° d·ªØ li·ªáu t·ª´ Strapi API response
      allCategories.value = response.data.data.map((item: any) => ({
        id: item.id,
        name: item.attributes.name,
        slug: item.attributes.slug,
        // üî¥ S·ª¨A L·ªñI ·ªû ƒê√ÇY: Truy c·∫≠p tr·ª±c ti·∫øp item.attributes.posts
        posts: item.attributes.posts || [] // N·∫øu posts l√† null/undefined, m·∫∑c ƒë·ªãnh l√† m·∫£ng r·ªóng
      }));
    } catch (err: any) {
      console.error('Error fetching all categories:', err);
      allCategoriesError.value = err.message;
    } finally {
      allCategoriesLoading.value = false;
    }
  };

  /**
   * T·∫£i c√°c danh m·ª•c th·ªãnh h√†nh t·ª´ endpoint recommendations.
   */
  const fetchTrendingCategories = async () => {
    trendingCategoriesLoading.value = true;
    trendingCategoriesError.value = null;
    try {
      const response = await api.get('/recommendations/trending-categories');
      // D·ªØ li·ªáu t·ª´ trending-categories ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω ·ªü backend, ch·ªâ c·∫ßn g√°n tr·ª±c ti·∫øp
      trendingCategories.value = response.data; 
    } catch (err: any) {
      console.error('Error fetching trending categories:', err);
      trendingCategoriesError.value = err.message;
    } finally {
      trendingCategoriesLoading.value = false;
    }
  };

  return {
    allCategories,
    allCategoriesLoading,
    allCategoriesError,
    fetchAllCategories,
    trendingCategories,
    trendingCategoriesLoading,
    trendingCategoriesError,
    fetchTrendingCategories
  };
}
